{
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "parserOptions": {
        "project": [
          "./tsconfig.json"
        ]
      }
    }
  ],
  "env": {
    "browser": true,
    "node": true
  },
  "ignorePatterns": [
    "node_modules",
    "./types"
  ],
  "extends": [
    "prettier",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "tsconfigRootDir": "",
    "project": [
      "./tsconfig.json"
    ]
  },
  "plugins": [
    "eslint-plugin-no-null",
    "eslint-plugin-jsdoc",
    "@typescript-eslint"
  ],
  "rules": {
    "semi-style": "error",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/indent": [
      "warn",
      2,
      { "SwitchCase": 1 }
    ],
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-require-imports": "off",
    "@typescript-eslint/no-shadow": [
      "off",
      {
        "hoist": "all"
      }
    ],
    "@typescript-eslint/no-unused-expressions": [
      "warn",
      {
        "allowShortCircuit": true
      }
    ],
    "no-extra-boolean-cast": "off",
    "@typescript-eslint/member-delimiter-style": ["error", {
      "overrides": {
        "interface": {
          "multiline": {
            "delimiter": "comma",
            "requireLast": false
          },
          "singleline": {
            "delimiter": "semi"
          }
        },
        "typeLiteral": {
          "multiline": {
            "delimiter": "comma",
            "requireLast": false
          },
          "singleline": {
            "delimiter": "semi"
          }
        }
      }
    }],
    "no-unused-vars": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "brace-style": [
      "error",
      "1tbs"
    ],
    "comma-dangle": "error",
    "curly": "off",
    "default-case": "off",
    "dot-notation": "off",
    "eol-last": "off",
    "eqeqeq": [
      "error",
      "smart"
    ],

    "guard-for-in": "error",
    "id-denylist": [
      "off",
      "any",
      "Number",
      "number",
      "String",
      "string",
      "Boolean",
      "boolean",
      "Undefined",
      "undefined"
    ],
    "id-match": "off",
    "jsdoc/check-alignment": "off",
    "jsdoc/check-indentation": "off",
    "jsdoc/newline-after-description": "off",
    "no-bitwise": "off",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-console": [
      "error",
      {
        "allow": [
          "log",
          "warn",
          "dir",
          "timeLog",
          "assert",
          "clear",
          "count",
          "countReset",
          "group",
          "groupEnd",
          "table",
          "debug",
          "dirxml",
          "error",
          "groupCollapsed",
          "Console",
          "profile",
          "profileEnd",
          "timeStamp",
          "context"
        ]
      }
    ],
    "no-prototype-builtins": "off",
    "no-debugger": "error",
    "no-empty": "off",
    "no-empty-function": "off",
    "no-eval": "error",
    "no-fallthrough": "error",
    "no-multiple-empty-lines": "off",
    "no-new-wrappers": "error",
    "no-null/no-null": "off",
    "no-param-reassign": "error",
    "no-redeclare": "off",
    "no-shadow": "off",
    "no-trailing-spaces": "off",
    "no-underscore-dangle": "off",
    "no-unused-expressions": "error",
    "no-unused-labels": "error",
    "no-var": "error",
    "radix": "error",
    "semi": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": [
          "/"
        ]
      }
    ]
  }
}
